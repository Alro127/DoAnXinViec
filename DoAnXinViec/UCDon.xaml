<UserControl x:Name="ucDon" x:Class="DoAnXinViec.UCDon" x:ClassModifier="public"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DoAnXinViec" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" Height="120" Width="440">

    <UserControl.Resources>
        <Style x:Key="GridBoGoc" TargetType="{x:Type Grid}"/>
        <Style x:Key="GridStyle1" TargetType="{x:Type Grid}"/>
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleBoGoc" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" OpacityMask="Black">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyleBoGoc" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid Margin="3,2,0,0">
        <Border CornerRadius="10" BorderThickness="1" OpacityMask="Black">
            <Border.Background>
                <SolidColorBrush Color="White"/>
            </Border.Background>
        </Border>
        <Image x:Name="imgAnh" HorizontalAlignment="Left" Height="60" Margin="10,10,0,0" VerticalAlignment="Top" Width="60" Source ="{Binding Anh}"  Stretch="UniformToFill"/>
        <Button x:Name="btnXem" x:FieldModifier="public" Style="{DynamicResource ButtonStyleBoGoc}" Content="Xem" HorizontalAlignment="Left" Margin="354,78,0,0" VerticalAlignment="Top" Background="#FF2A8DD3" FontSize="16" FontFamily="Segoe UI Black" Foreground="White" Width="69" Height="30" BorderBrush="{x:Null}" AutomationProperties.Name="btnXem"/>
        <GroupBox x:Name="grbTenCV" Style="{DynamicResource GroupBox}" HorizontalAlignment="Left" Height="60" Header="{Binding TenCV}" Margin="81,10,0,0" VerticalAlignment="Top" Width="341" FontFamily="Segoe UI Black" FontSize="18" Foreground="Black">
            <Label x:Name="lblTenCT" Content="{Binding TenCT}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Width="266" FontSize="14" Height="31" Foreground="#FF2A8DD3"/>
        </GroupBox>
        <Grid HorizontalAlignment="Left" Height="32" Margin="10,80,0,0" VerticalAlignment="Top" Width="306">
            <WrapPanel>
                <Label x:Name="lblDiaDiem" Style="{DynamicResource LabelStyleBoGoc}" Content="{Binding DiaDiem}" HorizontalAlignment="Left" VerticalAlignment="Center" Background="#b3e5fc" FontWeight="Bold" FontSize="10" Foreground="Black" Margin="10,5"/>
                <Label x:Name="lblLuong" Style="{DynamicResource LabelStyleBoGoc}" Content="{Binding Luong}" HorizontalAlignment="Center" VerticalAlignment="Top" Background="#b3e5fc" FontWeight="Bold" FontSize="10" Foreground="Black" Margin="0,5,0,0"/>
            </WrapPanel>
        </Grid>
        <ToggleButton x:Name="btnYeuThich"
              Width="30"
              Height="30"
              BorderThickness="0"
              VerticalAlignment="Top"
              HorizontalAlignment="Right"
              IsChecked="False"
              ToolTip="MaterialDesignFlatPrimaryToggleButton"
              Margin="0,11,0,0">
            <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- Outer circle -->
                        <Ellipse x:Name="OuterCircle"
                         Width="30"
                         Height="30"
                         StrokeThickness="1"
                         Fill="{TemplateBinding Background}"/>
                        <!-- Inner circle -->
                        <Ellipse x:Name="InnerCircle"
                         Width="26"
                         Height="26"
                         Fill="LightGray"
                         Margin="2"/>
                        <materialDesign:PackIcon x:Name="Icon"
                                          Kind="Heart"
                                          Foreground="White"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="InnerCircle" Property="Fill" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterCircle" Property="Stroke" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>


    </Grid>
</UserControl>